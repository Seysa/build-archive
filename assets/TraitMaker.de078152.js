import{d as _,f as o,o as i,c,a as t,g as x,v as m,h as f,i as p,t as h,j as y}from"./index.013b19b1.js";const b=["onSubmit"],g={class:"flex justify-center items-center gap-2"},k=t("span",null,"Enter your code: ",-1),w=t("button",{class:"p-2 bg-black rounded text-white hover:bg-opacity-80 transition-all w-1/3 mx-auto"}," Submit ",-1),A={id:"result",class:"flex flex-col justify-center mt-2"},E={key:0,class:"text-red-500 text-2xl text-center"},S={key:1,class:"flex flex-col gap-4"},j=t("h3",{class:"text-4xl"},"HTML",-1),B={class:"bg-black text-white px-4 py-1 rounded"},C=t("h3",{class:"text-4xl"},"JSON",-1),M={id:"JSON",class:"bg-black text-white px-4 py-1 rounded block"},N={key:2},O=_({setup(J){const n=o("[&DQkJGwMZRT3cEdwR1BEGEgYSKxIrEtQRyhHKEQcCAgMGEisS1BEAAAAAAAA=]"),s=o(""),a=o(""),d=o(!1),u=o(!1);async function v(){u.value=!0;const X=[];try{const e=await y(n.value);e.specializations.forEach(l=>{X.push(`data-armory-${l.id}-traits="${l.traits.join(",")}"`)});const r=e.specializations.map(l=>l.id).join(",");s.value=`<div
  data-armory-embed="specializations"
  data-armory-ids="${r}"
  ${X.join(`
  `)}
></div>`,a.value=JSON.stringify(e,null,4),console.log("html",s),console.log("json",a)}catch{s.value="",a.value="",d.value=!0}}return(X,e)=>(i(),c("div",null,[t("form",{class:"flex flex-col gap-4 justify-center",onSubmit:f(v,["prevent"])},[t("div",g,[k,x(t("input",{type:"text",class:"p-1 rounded w-[37rem] text-black","onUpdate:modelValue":e[0]||(e[0]=r=>n.value=r),placeholder:"[&XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX=]"},null,512),[[m,n.value]])]),w],40,b),t("div",A,[d.value?(i(),c("h2",E," Code is invalid ")):p("",!0),s.value?(i(),c("div",S,[j,t("pre",B,h(s.value),1),C,t("pre",M,h(a.value),1)])):u.value&&!d.value?(i(),c("h2",N,"Chargement...")):p("",!0)])]))}});export{O as default};
